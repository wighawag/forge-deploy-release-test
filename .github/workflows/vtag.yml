name: Release On v Tag

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: ncipollo/release-action@v1

  release:
    needs: create_release
    name: release ${{ matrix.target }}
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
          - target: x86_64-unknown-linux-musl
          - target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@master
      - name: Build
        run: |
        rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}
      - name: tar
        run: tar --directory=target/${{ matrix.target }}/release -cf forge-deploy-release-test_${{ github.ref_name }}_${{ matrix.target }}.tar.gz forge-deploy${{ matrix.target == x86_64-pc-windows-gnu && ".exe" || "" }}
      # - name: Compile and release
      #   uses: rust-build/rust-build.action@v1.3.2
      #   env:
      #     UPLOAD_MODE: none
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     RUSTTARGET: ${{ matrix.target }}
      #     ARCHIVE_TYPES: ${{ matrix.archive }}
      #     TOOLCHAIN_VERSION: 1.64.0
      - name: Upload to release
        uses: JasonEtco/upload-to-release@v0.1.1
        with:
          args: forge-deploy-release-test_${{ github.ref_name }}_${{ matrix.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  windows-msvc-release:
    needs: create_release
    name: release windows msvc
    permissions: write-all
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build
        run: |
          cargo build --release
      - name: tar
        run: tar --directory=target/release -cf archive.tar.gz forge-deploy.exe
      - name: upload
        run: |
          $id = gh api -H "Accept: application/vnd.github+json" /repos/wighawag/forge-deploy-release-test/releases/tags/${{ github.ref_name }} --jq .id
          curl --fail-with-body -sS  -X POST --data-binary "@archive.tar.gz" -H 'Content-Type: application/octet-stream' -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' "https://uploads.github.com/repos/wighawag/forge-deploy-release-test/releases/$id/assets?name=forge-deploy_${{ github.ref_name }}_x86_64-pc-windows-msvc.tar.gz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  macos-arm-release:
    needs: create_release
    name: release mac os arm release
    permissions: write-all
    runs-on: macos-12
    steps:
      - uses: actions/checkout@master
      - name: check toolchain
        run: rustup default
      - name: Build
        run: |
          rustup toolchain install stable-aarch64-apple-darwin
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
      - name: tar
        run: tar --directory=target/aarch64-apple-darwin/release -cf archive.tar.gz forge-deploy
      - name: upload
        run: |
          id=$(gh api -H "Accept: application/vnd.github+json" /repos/wighawag/forge-deploy-release-test/releases/tags/${{ github.ref_name }} --jq .id)
          curl --fail-with-body -sS  -X POST --data-binary @"archive.tar.gz" -H 'Content-Type: application/octet-stream' -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://uploads.github.com/repos/wighawag/forge-deploy-release-test/releases/$id/assets?name=forge-deploy_${{ github.ref_name }}_aarch64-apple-darwin.tar.gz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
